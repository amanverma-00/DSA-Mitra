name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Test and Build Backend
  backend-test:
    name: Backend Tests & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: package-lock.json
    
    - name: Install backend dependencies
      run: npm ci
    
    - name: Create test environment file
      run: |
        cat > backend/.env << EOF
        DB_CONNECT_STRING=mongodb://localhost:27017/dsa-chatbot-test
        JWT_KEY=test-jwt-secret-key-for-ci
        PORT=3002
        NODE_ENV=test
        GROQ_API_KEY=test-key
        REDIS_PASS=test-redis-pass
        SALT_ROUNDS=10
        TOKEN_EXPIRY=1h
        EOF
    
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: '6.0'
        mongodb-replica-set: test-rs
        mongodb-port: 27017
    
    - name: Wait for MongoDB
      run: |
        until nc -z localhost 27017; do
          echo "Waiting for MongoDB..."
          sleep 1
        done
        echo "MongoDB is ready!"
    
    - name: Run backend tests
      run: npm test
      working-directory: ./
    
    - name: Build backend
      run: npm run build --if-present
      working-directory: ./

  # Job 2: Test and Build Frontend
  frontend-test:
    name: Frontend Tests & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: npm ci
      working-directory: ./frontend
    
    - name: Create frontend environment file
      run: |
        echo "VITE_API_URL=http://localhost:3002" > frontend/.env
    
    - name: Run frontend linting
      run: npm run lint --if-present
      working-directory: ./frontend
    
    - name: Run frontend tests
      run: npm test --if-present
      working-directory: ./frontend
    
    - name: Build frontend
      run: npm run build
      working-directory: ./frontend
    
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-${{ matrix.node-version }}
        path: frontend/dist/
        retention-days: 7

  # Job 3: Security Scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci
    
    - name: Run security audit (Backend)
      run: npm audit --audit-level=high
      continue-on-error: true
    
    - name: Run security audit (Frontend)
      run: npm audit --audit-level=high
      working-directory: ./frontend
      continue-on-error: true
    
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # Job 4: Deploy to Staging (on main branch)
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: staging
      url: https://dsa-chatbot-staging.vercel.app
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci
    
    - name: Build for production
      run: |
        cd frontend
        npm run build
    
    - name: Deploy to Vercel (Staging)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend
        scope: ${{ secrets.VERCEL_ORG_ID }}
